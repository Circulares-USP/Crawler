import pytest
import os
import time
import datetime
from src import data

def data_register_mock(name, duration_time, x, url):
    """ Dado um tempo duration_time em segundos, simula o registro de dados supostamente requisitados
    a url em um arquivo JSON """

    files_content = {}
    files_content['../data/tests/test_register1.json'] = [""]
    files_content['../data/tests/test_register2.json'] = ['{"data_register": "2022-09-24T06:52:26Z", "buses": [{"bus_id": "", "bus_line": 0, "last_register": "", "position": [0, 0]}]}']
    files_content['../data/tests/test_register3.json'] = ['{"data_register": "2022-09-24T08:37:25Z", "buses": [{"bus_id": "28024", "bus_line": 8012, "last_register": "2022-09-24T00:08:55Z", "position": [-46.739708, -23.568467]}]}', '{"data_register": "2022-09-24T03:50:47Z", "buses": [{"bus_id": "28024", "bus_line": 8012, "last_register": "2022-09-24T00:09:08Z", "position": [-46.714251875, -23.564547250000004]}]}']

    curr_state = {}
    if name in files_content:
        curr_state['dump'] = files_content[name]

        with open(name, 'a+') as f:
            for line in curr_state['dump']: 
                f.write(line + '\n')
    else: 
        data.data_register(name, duration_time, x, url)

@pytest.mark.parametrize("name, duration_time, x, url, expected", [
    ("../data/tests/test_register1.json", 1, 1, "https://teste1/", "\n"),
    ("../data/tests/test_register2.json", 1, 1, "https://teste2/", '{"data_register": "2022-09-24T06:52:26Z", "buses": [{"bus_id": "", "bus_line": 0, "last_register": "", "position": [0, 0]}]}\n'),
    ("../data/tests/test_register3.json", 1, 1, "https://teste3/", '{"data_register": "2022-09-24T08:37:25Z", "buses": [{"bus_id": "28024", "bus_line": 8012, "last_register": "2022-09-24T00:08:55Z", "position": [-46.739708, -23.568467]}]}\n{"data_register": "2022-09-24T03:50:47Z", "buses": [{"bus_id": "28024", "bus_line": 8012, "last_register": "2022-09-24T00:09:08Z", "position": [-46.714251875, -23.564547250000004]}]}\n')
])
def test_data_register(name, duration_time, x, url, expected):
    data.data_register = data_register_mock
    data.data_register(name, duration_time, x, url)
    with open(name, 'r') as f:
        content = f.read()
        os.remove(name)
        assert content == expected

@pytest.mark.parametrize("test_file, output", [
    ("../data/tests/test1.json", []),
    ("../data/tests/test2.json", [[{"bus_id": "82449", "bus_line": 8012, "last_register": "2022-09-24T00:08:28Z", "position": [-46.73146, -23.568485000000003]},{"bus_id": "82512", "bus_line": 8012, "last_register": "2022-09-24T00:09:10Z", "position": [-46.720201, -23.562836125]},{"bus_id": "82405", "bus_line": 8012, "last_register": "2022-09-24T00:09:11Z", "position": [-46.739803, -23.5684115]},{"bus_id": "82447", "bus_line": 8012, "last_register": "2022-09-24T00:09:05Z", "position": [-46.73607187500001, -23.55804625]},{"bus_id": "82745", "bus_line": 8022, "last_register": "2022-09-24T00:08:55Z", "position": [-46.726283249999994, -23.56104775]},{"bus_id": "82507", "bus_line": 8022, "last_register": "2022-09-24T00:08:54Z", "position": [-46.7395165, -23.5685165]},{"bus_id": "82508", "bus_line": 8022, "last_register": "2022-09-24T00:09:05Z", "position": [-46.739708, -23.568467]},{"bus_id": "82494", "bus_line": 8022, "last_register": "2022-09-24T00:08:34Z", "position": [-46.709101125000004, -23.570836375]},{"bus_id": "82378", "bus_line": 8022, "last_register": "2022-09-24T00:08:53Z", "position": [-46.739903, -23.568271]},{"bus_id": "82443", "bus_line": 8012, "last_register": "2022-09-24T00:09:09Z", "position": [-46.736329, -23.55952]},{"bus_id": "82490", "bus_line": 8012, "last_register": "2022-09-24T00:09:06Z", "position": [-46.708211500000004, -23.571829]},{"bus_id": "82485", "bus_line": 8012, "last_register": "2022-09-24T00:09:02Z", "position": [-46.7087055, -23.571777]},{"bus_id": "82407", "bus_line": 8012, "last_register": "2022-09-24T00:09:11Z", "position": [-46.710192125000006, -23.570788999999998]},{"bus_id": "82743", "bus_line": 8022, "last_register": "2022-09-24T00:08:35Z", "position": [-46.730349249999996, -23.5611245]},{"bus_id": "82381", "bus_line": 8022, "last_register": "2022-09-24T00:09:07Z", "position": [-46.708453000000006, -23.571856500000003]},{"bus_id": "82744", "bus_line": 8022, "last_register": "2022-09-24T00:08:57Z", "position": [-46.73986, -23.568531]},{"bus_id": "82746", "bus_line": 8022, "last_register": "2022-09-24T00:09:08Z", "position": [-46.7082995, -23.571901500000003]},{"bus_id": "82543", "bus_line": 8032, "last_register": "2022-09-24T00:09:08Z", "position": [-46.720201, -23.562836125]},{"bus_id": "82380", "bus_line": 8032, "last_register": "2022-09-24T00:09:00Z", "position": [-46.7081485, -23.571656]},{"bus_id": "82500", "bus_line": 8032, "last_register": "2022-09-24T00:08:47Z", "position": [-46.7108125, -23.570591375]}]]),
    ("../data/tests/test3.json", [[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:46:40Z", "position": [-46.71783, -23.56281575]}], [{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:46:40Z", "position": [-46.71783, -23.56281575]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:47:33Z", "position": [-46.714251875, -23.564547250000004]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:47:33Z", "position": [-46.714251875, -23.564547250000004]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:48:01Z", "position": [-46.712356, -23.565449]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:48:12Z", "position": [-46.712356, -23.565449]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:48:12Z", "position": [-46.712356, -23.565449]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:48:12Z", "position": [-46.712356, -23.565449]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:48:57Z", "position": [-46.711765, -23.566428625]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:48:57Z", "position": [-46.711765, -23.566428625]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:48:57Z", "position": [-46.711765, -23.566428625]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:49:45Z", "position": [-46.7108125, -23.570591375]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:50:10Z", "position": [-46.709908375, -23.570878999999998]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:50:10Z", "position": [-46.709908375, -23.570878999999998]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:50:10Z", "position": [-46.709908375, -23.570878999999998]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:50:55Z", "position": [-46.7087835, -23.571234875]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:50:55Z", "position": [-46.7087835, -23.571234875]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:50:55Z", "position": [-46.7087835, -23.571234875]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:50:55Z", "position": [-46.7087835, -23.571234875]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:51:40Z", "position": [-46.708104000000006, -23.5715115]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:51:40Z", "position": [-46.708104000000006, -23.5715115]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:52:26Z", "position": [-46.740213, -23.5680135]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:52:26Z", "position": [-46.740213, -23.5680135]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:52:26Z", "position": [-46.740213, -23.5680135]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:52:26Z", "position": [-46.740213, -23.5680135]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:53:23Z", "position": [-46.709101125000004, -23.570836375]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:53:23Z", "position": [-46.709101125000004, -23.570836375]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:53:23Z", "position": [-46.709101125000004, -23.570836375]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:54:08Z", "position": [-46.708244500000006, -23.5685555]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:54:08Z", "position": [-46.708244500000006, -23.5685555]}],[{"bus_id": "82504", "bus_line": 8022, "last_register": "2022-09-24T06:54:08Z", "position": [-46.708244500000006, -23.5685555]}]])])
def test_data_read(test_file, output):
    assert data.data_read(test_file) == output
